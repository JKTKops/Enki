odd X if X = 2*K + 1.
even X if X = 2*K.

square root X is (Root^2) = X, Root.

A divides B if B = A*N.

list may be
    empty.
    cons Head Tail has
        Head : int,
        Tail : list.

pair may be
    pair X and Y has X : int, Y : int.

length of List is
    when List = cons H T then 1 + length of T.
    otherwise then 0.

construct Head Full is
    Full = (cons Head Tail),
    Tail.

concat A B is
    when A = cons H T then cons H (concat T B).
    otherwise then B.

concat A with B is concat A B.

flatten List is
    when List = cons H T then concat H with (flatten T).
    otherwise then empty.

reverseAcc A Acc is
    when A = cons H T then reverseAcc T (cons H Acc).
    otherwise then Acc.

reverse list A is reverseAcc A empty.

sum List is
    when List = cons H T then H + sum T.
    otherwise then 0.

List sums to N where N = sum List.

multiples of A in List is
    when List = cons H T, A divides H then cons H (multiples of A in T).
    when List = cons H T then multiples of A in T.
    otherwise then empty.

formatHelper List is
    when List = cons H empty then H .. "]".
    when List = cons H T then H .. "," .. formatHelper T.
    otherwise then "]".

format list List is "[" .. formatHelper List.

range Low to High is
    when Low > High then empty.
    otherwise then cons Low (range (Low + 1) to High).

range from Low to High is range Low to High.
integers from Low to High is range Low to High.

inc List is
    when List = (cons H T) then
        cons (H + 1) (inc T).
    otherwise then empty.

zip A and B is
    when A = cons HA TA, B = cons HB TB then
        cons (pair HA and HB) (zip TA and TB).
    otherwise then empty.

max of A and B is
    when A > B then A.
    otherwise then B.

min of A and B is
    when A > B then A.
    otherwise then B.

maximum of List is
    when List = cons H empty then H.
    when List = cons H T then max of H and maximum of T.
    otherwise then 0.

minimum of List is
    when List = cons H empty then H.
    when List = cons H T then min of H and minimum of T.
    otherwise then 0.

find factor of N starting with X is
    when X divides N then X.
    otherwise then find factor of N starting with (X + 1).

factors of N is
    when N = 1 then empty.
    otherwise then
        Factor = find factor of N starting with 2,
        cons Factor factors of (N / Factor).

digits of N is
    when N < 10 then cons N empty.
    otherwise then
        N = 10*Rest + Digit,
        Digit >= 0, Digit < 10,
        cons Digit digits of Rest.

palindrome List if reverse list List = List.
palindrome number N if palindrome digits of N.

pair X with each List is
    when List = cons H T then cons (pair X and H) (pair X with each T).
    otherwise then empty.

cartesian product of A and B is
    when A = cons H T then
        concat (pair H with each B) with cartesian product of T and B.
    otherwise then empty.

pairs of A and B is cartesian product of A and B.

