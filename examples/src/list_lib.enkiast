def(d(comp(s("list")),constructor(comp(s("empty")),nil) constructor(comp(s("cons") v("Head") v("Tail")),field(comp(v("Head")),int) field(comp(v("Tail")),type(comp(s("list")))))))
def(f(comp(s("length") s("of") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(1) s("+") comp(s("length") s("of") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(f(comp(s("construct") v("Head") v("Full")),cs(c(comp(v("Full") s("=") comp(s("cons") v("Head") v("Tail"))))),e(comp(v("Tail")))))
def(f(comp(s("append") v("A") v("B")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("H") comp(s("append") v("T") v("B"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("B"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(f(comp(s("reverseAcc") v("A") v("Acc")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("reverseAcc") v("T") comp(s("cons") v("H") v("Acc"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("Acc"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(f(comp(s("reverse") s("list") v("A")),cs(nil),e(comp(s("reverseAcc") v("A") s("empty")))))
def(f(comp(s("range") v("Low") s("to") v("High")),cs(when(cs(c(comp(v("Low") s(">") v("High")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("Low") comp(s("range") comp(v("Low") s("+") i(1)) s("to") v("High")))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(r(comp(s("sum") v("List") s("is") v("N")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(s("sum") v("T") s("is") comp(v("N") s("-") v("H")))))) when(cs(c(comp(v("N") s("=") i(0)))),cs(nil)))))
exec(ex(cs(c(comp(s("display") comp(s("range") i(1) s("to") i(10)))))))