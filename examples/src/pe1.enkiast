import(m(def(r(comp(s("odd") v("X")),cs(c(comp(v("X") s("=") comp(comp(i(2) s("*") v("K")) s("+") i(1))))))) def(r(comp(s("even") v("X")),cs(c(comp(v("X") s("=") comp(i(2) s("*") v("K"))))))) def(f(comp(s("square") s("root") v("X")),cs(c(comp(comp(v("Root") s("^") i(2)) s("=") v("X")))),e(comp(v("Root"))))) def(r(comp(v("A") s("divides") v("B")),cs(c(comp(v("B") s("=") comp(v("A") s("*") v("N"))))))) def(d(comp(s("list")),constructor(comp(s("empty")),nil) constructor(comp(s("cons") v("Head") v("Tail")),field(comp(v("Head")),any("T")) field(comp(v("Tail")),type(comp(s("list"))))))) def(d(comp(s("pair")),constructor(comp(s("pair") v("X") s("and") v("Y")),field(comp(v("X")),any("A")) field(comp(v("Y")),any("B"))))) def(f(comp(s("length") s("of") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(1) s("+") comp(s("length") s("of") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("construct") v("Head") v("Full")),cs(c(comp(v("Full") s("=") comp(s("cons") v("Head") v("Tail"))))),e(comp(v("Tail"))))) def(f(comp(s("concat") v("A") v("B")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("H") comp(s("concat") v("T") v("B"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("B"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("reverseAcc") v("A") v("Acc")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("reverseAcc") v("T") comp(s("cons") v("H") v("Acc"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("Acc"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("reverse") s("list") v("A")),cs(nil),e(comp(s("reverseAcc") v("A") s("empty"))))) def(f(comp(s("sum") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H") s("+") comp(s("sum") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(r(comp(v("List") s("sums") s("to") v("N")),cs(c(comp(v("N") s("=") comp(s("sum") v("List"))))))) def(f(comp(s("multiples") s("of") v("A") s("in") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T")))) c(comp(v("A") s("divides") v("H")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("H") comp(s("multiples") s("of") v("A") s("in") v("T"))))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("multiples") s("of") v("A") s("in") v("T")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("formatHelper") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") s("empty"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H") s("..") s("\"]\"")))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(comp(v("H") s("..") s("\",\"")) s("..") comp(s("formatHelper") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("\"]\""))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("format") s("list") v("List")),cs(nil),e(comp(s("\"[\"") s("..") comp(s("formatHelper") v("List")))))) def(f(comp(s("range") v("Low") s("to") v("High")),cs(when(cs(c(comp(v("Low") s(">") v("High")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("Low") comp(s("range") comp(v("Low") s("+") i(1)) s("to") v("High")))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("range") s("from") v("Low") s("to") v("High")),cs(nil),e(comp(s("range") v("Low") s("to") v("High"))))) def(f(comp(s("inc") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") comp(v("H") s("+") i(1)) comp(s("inc") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("zip") v("A") s("and") v("B")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("HA") v("TA")))) c(comp(v("B") s("=") comp(s("cons") v("HB") v("TB"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") comp(s("pair") v("HA") s("and") v("HB")) comp(s("zip") v("TA") s("and") v("TB"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))))
def(f(comp(s("answer") s("less") s("than") v("N")),cs(c(comp(v("ThreeMult") s("=") comp(s("multiples") s("of") i(3) s("in") comp(s("range") i(1) s("to") v("N"))))) c(comp(v("FiveMult") s("=") comp(s("multiples") s("of") i(5) s("in") comp(s("range") i(1) s("to") v("N"))))) c(comp(v("FifteenMult") s("=") comp(s("multiples") s("of") i(15) s("in") comp(s("range") i(1) s("to") v("N")))))),e(comp(comp(comp(s("sum") v("ThreeMult")) s("+") comp(s("sum") v("FiveMult"))) s("-") comp(s("sum") v("FifteenMult"))))))
exec(ex(cs(c(comp(s("display") comp(s("answer") s("less") s("than") i(999)))))))