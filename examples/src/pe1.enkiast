def(d(comp(s("list")),constructor(comp(s("empty")),nil) constructor(comp(s("cons") v("Head") v("Tail")),field(comp(v("Head")),int) field(comp(v("Tail")),type(comp(s("list")))))))
def(f(comp(s("sum") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H") s("+") comp(s("sum") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(r(comp(v("A") s("divides") v("B")),cs(c(comp(v("B") s("=") comp(v("A") s("*") v("N")))))))
def(f(comp(s("multiples") s("of") v("A") s("in") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T")))) c(comp(v("A") s("divides") v("H")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("H") comp(s("multiples") s("of") v("A") s("in") v("T"))))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("multiples") s("of") v("A") s("in") v("T")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(f(comp(s("range") v("Low") s("to") v("High")),cs(when(cs(c(comp(v("Low") s(">") v("High")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("Low") comp(s("range") comp(v("Low") s("+") i(1)) s("to") v("High")))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(f(comp(s("formatHelper") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") s("empty"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H") s("..") s("\"]\"")))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(comp(v("H") s("..") s("\",\"")) s("..") comp(s("formatHelper") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("\"]\""))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(f(comp(s("format") s("list") v("List")),cs(nil),e(comp(s("\"[\"") s("..") comp(s("formatHelper") v("List"))))))
def(f(comp(s("answer") s("less") s("than") v("N")),cs(c(comp(v("ThreeMult") s("=") comp(s("multiples") s("of") i(3) s("in") comp(s("range") i(1) s("to") v("N"))))) c(comp(v("FiveMult") s("=") comp(s("multiples") s("of") i(5) s("in") comp(s("range") i(1) s("to") v("N"))))) c(comp(v("FifteenMult") s("=") comp(s("multiples") s("of") i(15) s("in") comp(s("range") i(1) s("to") v("N")))))),e(comp(comp(comp(s("sum") v("ThreeMult")) s("+") comp(s("sum") v("FiveMult"))) s("-") comp(s("sum") v("FifteenMult"))))))
exec(ex(cs(c(comp(s("display") comp(s("answer") s("less") s("than") i(999)))))))