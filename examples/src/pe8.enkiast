import(m(def(r(comp(s("odd") v("X")),cs(c(comp(v("X") s("=") comp(comp(i(2) s("*") v("K")) s("+") i(1))))))) def(r(comp(s("even") v("X")),cs(c(comp(v("X") s("=") comp(i(2) s("*") v("K"))))))) def(f(comp(s("square") s("root") v("X")),cs(c(comp(comp(v("Root") s("^") i(2)) s("=") v("X")))),e(comp(v("Root"))))) def(r(comp(v("A") s("divides") v("B")),cs(c(comp(v("B") s("=") comp(v("A") s("*") v("N"))))))) def(d(comp(s("list")),constructor(comp(s("empty")),nil) constructor(comp(s("cons") v("Head") v("Tail")),field(comp(v("Head")),int) field(comp(v("Tail")),type(comp(s("list"))))))) def(d(comp(s("pair")),constructor(comp(s("pair") v("X") s("and") v("Y")),field(comp(v("X")),int) field(comp(v("Y")),int)))) def(f(comp(s("length") s("of") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(1) s("+") comp(s("length") s("of") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("construct") v("Head") v("Full")),cs(c(comp(v("Full") s("=") comp(s("cons") v("Head") v("Tail"))))),e(comp(v("Tail"))))) def(f(comp(s("concat") v("A") v("B")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("H") comp(s("concat") v("T") v("B"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("B"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("concat") v("A") s("with") v("B")),cs(nil),e(comp(s("concat") v("A") v("B"))))) def(f(comp(s("flatten") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("concat") v("H") s("with") comp(s("flatten") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("reverseAcc") v("A") v("Acc")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("reverseAcc") v("T") comp(s("cons") v("H") v("Acc"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("Acc"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("reverse") s("list") v("A")),cs(nil),e(comp(s("reverseAcc") v("A") s("empty"))))) def(f(comp(s("sum") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H") s("+") comp(s("sum") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(r(comp(v("List") s("sums") s("to") v("N")),cs(c(comp(v("N") s("=") comp(s("sum") v("List"))))))) def(f(comp(s("sum") s("of") v("List")),cs(nil),e(comp(s("sum") v("List"))))) def(f(comp(s("multiples") s("of") v("A") s("in") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T")))) c(comp(v("A") s("divides") v("H")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("H") comp(s("multiples") s("of") v("A") s("in") v("T"))))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("multiples") s("of") v("A") s("in") v("T")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("formatHelper") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") s("empty"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H") s("..") s("\"]\"")))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(comp(v("H") s("..") s("\",\"")) s("..") comp(s("formatHelper") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("\"]\""))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("format") s("list") v("List")),cs(nil),e(comp(s("\"[\"") s("..") comp(s("formatHelper") v("List")))))) def(f(comp(s("range") v("Low") s("to") v("High")),cs(when(cs(c(comp(v("Low") s(">") v("High")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("Low") comp(s("range") comp(v("Low") s("+") i(1)) s("to") v("High")))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("range") s("from") v("Low") s("to") v("High")),cs(nil),e(comp(s("range") v("Low") s("to") v("High"))))) def(f(comp(s("integers") s("from") v("Low") s("to") v("High")),cs(nil),e(comp(s("range") v("Low") s("to") v("High"))))) def(f(comp(s("inc") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") comp(v("H") s("+") i(1)) comp(s("inc") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("zip") v("A") s("and") v("B")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("HA") v("TA")))) c(comp(v("B") s("=") comp(s("cons") v("HB") v("TB"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") comp(s("pair") v("HA") s("and") v("HB")) comp(s("zip") v("TA") s("and") v("TB"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("max") s("of") v("A") s("and") v("B")),cs(when(cs(c(comp(v("A") s(">") v("B")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("A")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("B"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("min") s("of") v("A") s("and") v("B")),cs(when(cs(c(comp(v("A") s(">") v("B")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("A")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("B"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("maximum") s("of") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") s("empty"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H")))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("max") s("of") v("H") s("and") s("maximum") s("of") v("T")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("minimum") s("of") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") s("empty"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H")))))) when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("min") s("of") v("H") s("and") s("minimum") s("of") v("T")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(0))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("find") s("factor") s("of") v("N") s("starting") s("with") v("X")),cs(when(cs(c(comp(v("X") s("divides") v("N")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("X")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("find") s("factor") s("of") v("N") s("starting") s("with") comp(v("X") s("+") i(1)))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("factors") s("of") v("N")),cs(when(cs(c(comp(v("N") s("=") i(1)))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty")))))) when(cs(c(comp(v("Factor") s("=") comp(s("find") s("factor") s("of") v("N") s("starting") s("with") i(2)))) c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("Factor") s("factors") s("of") comp(v("N") s("/") v("Factor")))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("digits") s("of") v("N")),cs(when(cs(c(comp(v("N") s("<") i(10)))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("N") s("empty")))))) when(cs(c(comp(v("N") s("=") comp(comp(i(10) s("*") v("Rest")) s("+") v("Digit")))) c(comp(v("Digit") s(">=") i(0))) c(comp(v("Digit") s("<") i(10))) c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("Digit") s("digits") s("of") v("Rest"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(r(comp(s("palindrome") v("List")),cs(c(comp(comp(s("reverse") s("list") v("List")) s("=") v("List")))))) def(r(comp(s("palindrome") s("number") v("N")),cs(c(comp(s("palindrome") s("digits") s("of") v("N")))))) def(f(comp(s("pair") v("X") s("with") s("each") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") comp(s("pair") v("X") s("and") v("H")) comp(s("pair") v("X") s("with") s("each") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("cartesian") s("product") s("of") v("A") s("and") v("B")),cs(when(cs(c(comp(v("A") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("concat") comp(s("pair") v("H") s("with") s("each") v("B")) s("with") s("cartesian") s("product") s("of") v("T") s("and") v("B")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("pairs") s("of") v("A") s("and") v("B")),cs(nil),e(comp(s("cartesian") s("product") s("of") v("A") s("and") v("B"))))) def(f(comp(s("take") v("N") s("from") v("List")),cs(when(cs(c(comp(v("N") s(">") i(0))) c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") v("H") comp(s("take") comp(v("N") s("-") i(1)) s("from") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("drop") v("N") s("from") v("List")),cs(when(cs(c(comp(v("N") s(">") i(0))) c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("drop") comp(v("N") s("-") i(1)) s("from") v("T")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("List"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("product") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H") s("*") comp(s("product") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(i(1))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("product") s("of") v("List")),cs(nil),e(comp(s("product") v("List"))))) def(f(comp(s("element") v("N") s("of") v("List")),cs(when(cs(c(comp(v("N") s("<=") i(0))) c(comp(v("List") s("=") comp(s("cons") v("H") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(v("H")))))) when(cs(c(comp(v("N") s(">") i(0))) c(comp(v("List") s("=") comp(s("cons") v("H") v("T")))) c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("element") comp(v("N") s("-") i(1)) s("of") v("T"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("chunks") s("of") s("size") v("L") s("in") v("List")),cs(when(cs(c(comp(v("List") s("=") s("empty")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("cons") comp(s("take") v("L") s("from") v("List")) comp(s("chunks") s("of") s("size") v("L") s("in") s("drop") v("L") s("from") v("List")))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT"))))) def(f(comp(s("chunks") s("of") s("length") v("L") s("in") v("List")),cs(nil),e(comp(s("chunks") s("of") s("size") v("L") s("in") v("List"))))) def(f(comp(s("prepend") v("Head") s("to") v("Tail")),cs(nil),e(comp(s("cons") v("Head") v("Tail")))))))
def(f(comp(s("overlapping") s("chunks") s("of") s("size") v("L") s("in") v("List")),cs(when(cs(c(comp(v("List") s("=") s("empty")))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty")))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("prepend") comp(s("take") v("L") s("from") v("List")) s("to") comp(s("overlapping") s("chunks") s("of") s("size") v("L") s("in") s("drop") i(1) s("from") v("List")))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
def(f(comp(s("products") s("in") v("List")),cs(when(cs(c(comp(v("List") s("=") comp(s("prepend") v("H") s("to") v("T"))))),cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("prepend") comp(s("product") s("of") v("H")) s("to") comp(s("products") s("in") v("T"))))))) when(cs(c(comp(v("AUTOGENERATEDFUNCTIONRESULT") s("=") comp(s("empty"))))),cs(nil))),e(comp(v("AUTOGENERATEDFUNCTIONRESULT")))))
exec(ex(cs(c(comp(v("N") s("=") i(7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450))))))
exec(ex(cs(c(comp(s("display") s("maximum") s("of") s("products") s("in") s("overlapping") s("chunks") s("of") s("size") i(13) s("in") s("digits") s("of") v("N"))))))